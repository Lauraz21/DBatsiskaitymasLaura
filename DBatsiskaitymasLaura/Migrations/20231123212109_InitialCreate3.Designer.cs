// <auto-generated />
using System;
using DBatsiskaitymasLaura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBatsiskaitymasLaura.Migrations
{
    [DbContext(typeof(UniversityDbContext))]
    [Migration("20231123212109_InitialCreate3")]
    partial class InitialCreate3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DBatsiskaitymasLaura.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DBatsiskaitymasLaura.DepartmentLecture", b =>
                {
                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("LectureID")
                        .HasColumnType("int");

                    b.HasKey("DepartmentID", "LectureID");

                    b.HasIndex("LectureID");

                    b.ToTable("DepartmentLectures");
                });

            modelBuilder.Entity("DBatsiskaitymasLaura.Lecture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<int>("End")
                        .HasColumnType("int");

                    b.Property<int>("LectureCode")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Start")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("DBatsiskaitymasLaura.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentCode")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DBatsiskaitymasLaura.StudentLecture", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("LectureID")
                        .HasColumnType("int");

                    b.HasKey("StudentID", "LectureID");

                    b.HasIndex("LectureID");

                    b.ToTable("StudentLectures");
                });

            modelBuilder.Entity("DBatsiskaitymasLaura.DepartmentLecture", b =>
                {
                    b.HasOne("DBatsiskaitymasLaura.Department", "Department")
                        .WithMany("DepartmentLectures")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBatsiskaitymasLaura.Lecture", "Lecture")
                        .WithMany()
                        .HasForeignKey("LectureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Lecture");
                });

            modelBuilder.Entity("DBatsiskaitymasLaura.Student", b =>
                {
                    b.HasOne("DBatsiskaitymasLaura.Department", null)
                        .WithMany("Students")
                        .HasForeignKey("DepartmentID");
                });

            modelBuilder.Entity("DBatsiskaitymasLaura.StudentLecture", b =>
                {
                    b.HasOne("DBatsiskaitymasLaura.Lecture", "Lecture")
                        .WithMany()
                        .HasForeignKey("LectureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBatsiskaitymasLaura.Student", "Student")
                        .WithMany("StudentLectures")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DBatsiskaitymasLaura.Department", b =>
                {
                    b.Navigation("DepartmentLectures");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("DBatsiskaitymasLaura.Student", b =>
                {
                    b.Navigation("StudentLectures");
                });
#pragma warning restore 612, 618
        }
    }
}
